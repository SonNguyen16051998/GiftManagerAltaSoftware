// <auto-generated />
using System;
using GiftCodeManager.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GiftCodeManager.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GiftCodeManager.Models.Barcode", b =>
                {
                    b.Property<int>("BarcodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Campaign_Id")
                        .HasColumnType("int");

                    b.Property<string>("Charset")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Code_Length")
                        .HasColumnType("int");

                    b.Property<int>("Code_count")
                        .HasColumnType("int");

                    b.Property<int>("Code_redemption_limit")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Postfix")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Scanned")
                        .HasColumnType("int");

                    b.Property<bool>("Unlimited")
                        .HasColumnType("bit");

                    b.HasKey("BarcodeId");

                    b.HasIndex("Campaign_Id");

                    b.ToTable("Barcodes");
                });

            modelBuilder.Entity("GiftCodeManager.Models.Campaign", b =>
                {
                    b.Property<int>("Campaign_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Activated_Code")
                        .HasColumnType("int");

                    b.Property<bool>("Auto_Update")
                        .HasColumnType("bit");

                    b.Property<string>("Campaign_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Charset")
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("CheckCusJoin_OnlyOnce")
                        .HasColumnType("bit");

                    b.Property<int>("Code_Count")
                        .HasColumnType("int");

                    b.Property<int>("Code_Length")
                        .HasColumnType("int");

                    b.Property<int>("Code_UsageLimit")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("Postfix")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Prefix")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<bool>("Unlimited")
                        .HasColumnType("bit");

                    b.HasKey("Campaign_Id");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("GiftCodeManager.Models.Customer", b =>
                {
                    b.Property<int>("Customer_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Customer_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date_Of_Birth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Spin_Number")
                        .HasColumnType("int");

                    b.Property<string>("Type_Of_Business")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Customer_Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("GiftCodeManager.Models.Gift", b =>
                {
                    b.Property<int>("Gift_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Campaign_Id")
                        .HasColumnType("int");

                    b.Property<int>("Code_Count")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Gift_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Gift_Id");

                    b.HasIndex("Campaign_Id");

                    b.ToTable("Gifts");
                });

            modelBuilder.Entity("GiftCodeManager.Models.Rule", b =>
                {
                    b.Property<int>("Gift_Id")
                        .HasColumnType("int");

                    b.Property<bool>("AllDay")
                        .HasColumnType("bit");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("EndTime_Repeat")
                        .HasColumnType("time");

                    b.Property<double>("Gift_Amount")
                        .HasColumnType("float");

                    b.Property<int>("Monthly_On_Day")
                        .HasColumnType("int");

                    b.Property<int>("Probability")
                        .HasColumnType("int");

                    b.Property<string>("Rule_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("StartTime_Repeat")
                        .HasColumnType("time");

                    b.HasKey("Gift_Id");

                    b.ToTable("Rules");
                });

            modelBuilder.Entity("GiftCodeManager.Models.Usedbarcode_Customer", b =>
                {
                    b.Property<int>("Customer_Id")
                        .HasColumnType("int");

                    b.Property<int>("Barcode_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Scanned_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Scanned_Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Spin_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Used_for_pin")
                        .HasColumnType("bit");

                    b.HasKey("Customer_Id", "Barcode_Id");

                    b.HasIndex("Barcode_Id");

                    b.ToTable("Usedbarcode_Customers");
                });

            modelBuilder.Entity("GiftCodeManager.Models.User", b =>
                {
                    b.Property<int>("User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("Char(15)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("User_Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GiftCodeManager.Models.Winner", b =>
                {
                    b.Property<int>("Customer_Id")
                        .HasColumnType("int");

                    b.Property<int>("Gift_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Sent_Gift_Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Win_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Customer_Id", "Gift_Id");

                    b.HasIndex("Gift_Id");

                    b.ToTable("Winners");
                });

            modelBuilder.Entity("GiftCodeManager.Models.Barcode", b =>
                {
                    b.HasOne("GiftCodeManager.Models.Campaign", "Campaign")
                        .WithMany("Barcode")
                        .HasForeignKey("Campaign_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("GiftCodeManager.Models.Gift", b =>
                {
                    b.HasOne("GiftCodeManager.Models.Campaign", "Campaign")
                        .WithMany("Gifts")
                        .HasForeignKey("Campaign_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("GiftCodeManager.Models.Rule", b =>
                {
                    b.HasOne("GiftCodeManager.Models.Gift", "Gift")
                        .WithOne("Rules")
                        .HasForeignKey("GiftCodeManager.Models.Rule", "Gift_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gift");
                });

            modelBuilder.Entity("GiftCodeManager.Models.Usedbarcode_Customer", b =>
                {
                    b.HasOne("GiftCodeManager.Models.Barcode", "Barcode")
                        .WithMany("usedbarcode_Customers")
                        .HasForeignKey("Barcode_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GiftCodeManager.Models.Customer", "Customer")
                        .WithMany("Usedbarcode")
                        .HasForeignKey("Customer_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Barcode");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("GiftCodeManager.Models.Winner", b =>
                {
                    b.HasOne("GiftCodeManager.Models.Customer", "Customer")
                        .WithMany("Winner")
                        .HasForeignKey("Customer_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GiftCodeManager.Models.Gift", "Gift")
                        .WithMany("Winner")
                        .HasForeignKey("Gift_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Gift");
                });

            modelBuilder.Entity("GiftCodeManager.Models.Barcode", b =>
                {
                    b.Navigation("usedbarcode_Customers");
                });

            modelBuilder.Entity("GiftCodeManager.Models.Campaign", b =>
                {
                    b.Navigation("Barcode");

                    b.Navigation("Gifts");
                });

            modelBuilder.Entity("GiftCodeManager.Models.Customer", b =>
                {
                    b.Navigation("Usedbarcode");

                    b.Navigation("Winner");
                });

            modelBuilder.Entity("GiftCodeManager.Models.Gift", b =>
                {
                    b.Navigation("Rules");

                    b.Navigation("Winner");
                });
#pragma warning restore 612, 618
        }
    }
}
